/*//////////////////////////////////////////////////////////////        
Преобразование показаний температуры в гликемию проиводитсяпо следующим формулам:
Xg'=X1'+X2', 
X1'=KTP*WTP(s)XT', 
X2'=KP*WTP(s)XP', 
XT' - безразмерное отклонение температуры от установившегося значения,  
XP' - безразмерное отклонение теплового потока от установившегося значения, 
WTP(s)=e^(-tau*s) - передаточная функция концентрации глюкозы в крови по температуре и тепловому потоку, 
tau - запаздывание изменения глюкозы крови относительно отклонения температуры (10 - 30 минут),  
KTP, KP - калибровочные коэффициенты, 
s=d/(dt) - оператор дифференцирования, 
dt - время прошедшее после предыдущего измерения (в данном случае период = 5 минутам, т.е. 300000 мс.)

Вспомогательные формлы:
Xg'=X1'+X2'
Xg'=dXg/Xg0 - безразмерное отклонение концентрации глюкозы и крови от установившегося значения,
XT'=dXT/XT_0,
XP'=dXP/XP_0,
Xg0 - установившееся базовое значение концентрации глюкозы крови,  
XT_0 - установившееся базовое значение температуры тела,  
XP_0 - установившееся базовое значение теплового потока тела,
dXg=Xg-Xg0,
dXT=XT-XT_0,
dXP=XP-XP_0,
Xg - текущее значение концентрации глюкозы крови,  
XT - текцщее значение температуры тела,  
XP - текущее значение теплового потока тела,

Расчет теплового потока от температуры:
XP=M_2PI*al*dXT
//////////////////////////////////////////////////////////////*/

#include "Glycemia.h"
#include <math.h> // для sqrt(), fabs(), pow(), cos(), acos().
#include <iostream> // for std::cout
#define M_PI (3.141592653589793)
#define M_2PI (2.*M_PI)

float Glycemia::Calculate()
{
    dXT=XT-XT_0;
    dXP=XP-XP_0;
    XP=M_2PI*al*dXT; 
    XT_j=dXT/XT_0;// XT'
    XP_j=dXP/XP_0;// XP'        
    s=dtau/dt; 
    WTP=exp(-s);
    Xg=((KTP*WTP*XT_j)+(KP*WTP*XP_j))*Xg0+Xg0;
        
    return Xg;
};