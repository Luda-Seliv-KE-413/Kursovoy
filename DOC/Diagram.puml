@startuml main 

interface IThread
{
    + void Execute () = 0
}
class MeasureGlycemiaTask
{
    Реализует измерение
    гликемии

    + void Execute ()
}
class Glycemia
{
    Преобразует полученные
    значения температуры в
    значения гликемии

     + void Calculate ()
}

class Temperature
{
    Преобразует частоту
    в температуру

     + void Calculate ()
}

class Frequency
{
     возможно удалить и 
     таймеры подсоединить
     сразу к температуре
     
     + void Calculate ()
}

IThread <|-down- MeasureGlycemiaTask
ICalculate -up-o MeasureGlycemiaTask
ICalculate <|-- Glycemia
ICalculate --o Glycemia
Temperature -up-|> ICalculate
Frequency -up-|> ICalculate
ICalculate --o Temperature

class BluetoothGlycemiaTask
{
    Реализует передачу
    информации

     + void Execute ()
}
class USART2
{
    Преобразует нформацию
    для передачи данных
    
    + {abstract} DataLineUsart ()
}
class Transmitor
{
    Отправляет запрошенную
    информацию
    
    + {abstract} DataTransmitor ()
}
interface ICalculate
{
    Обеспечивает передачу
    информации о гликемии

    + void Calculate () = 0
}

class InformationGlycemia
{
    Преобразует значение 
    гликемии в строку
    
    + {abstract} DataLine ()
}
interface IBluetooth
{
    Обеспчечивает передачу 
    информации по беспроводному
    интерфейсу
}
interface IUSART
{
    Обеспечивает преобразование 
    нформации для передачи 
    данных
}
interface IConverter
{
    Конвертирует информацию 
    о глиемии и передает для 
    передачи по Bluetooth
}
interface IDataProvider
{
    Обеспечивает передачу 
    информации для дальнейшего 
    преобразования в строку
}

IThread <|-- BluetoothGlycemiaTask
BluetoothGlycemiaTask o-- IBluetooth
Transmitor -up-|> IBluetooth
IUSART -up-o Transmitor
USART2 -up-|> IUSART
InformationGlycemia -up-|> IConverter
IConverter -up-o BluetoothGlycemiaTask


InformationGlycemia o.up.IDataProvider
Glycemia --|> IDataProvider



interface ITimer
{
    Обеспечивает считывание
    информации полученной
    таймером

    + void count () = 0
}
class Timer2
{
    Считает кол-во импульсов
    пришедших на него за период 
    установленный RTC

    + void count ()
}

ITimer -up-o Frequency
Timer2 -up-|> ITimer

@enduml